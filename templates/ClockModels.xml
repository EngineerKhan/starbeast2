<beast version="2.0" namespace="beast.app.beauti:beast.core:beast.evolution.branchratemodel:beast.evolution.speciation:beast.evolution.tree.coalescent:beast.core.util:beast.evolution.nuc:beast.evolution.operators:beast.evolution.sitemodel:beast.evolution.substitutionmodel:beast.evolution.likelihood:beast.evolution:beast.math.distributions">
	<!-- Clock models -->
	<mergewith point="sbClockModelTemplates">
		<!-- Strict clock -->
		<subtemplate id="sbStrictClock" class="beast.evolution.branchratemodel.StrictClockModel" mainid="StrictClock.c:$(n)">
<![CDATA[
		<branchRateModel spec="StrictClockModel" id="strictClock.c:$(n)">
			<parameter name="clock.rate" id="clockRate.c:$(n)" value="1.0" estimate="true"/>
		</branchRateModel>

		<distr id="clockRatesPriorDist" name="distr" spec="beast.math.distributions.LogNormalDistributionModel" meanInRealSpace="true">
			<parameter name="M" id="clockRatesMean" value="1.0" lower="0" estimate="false"/>
			<parameter name="S" id="clockRatesStdev" value="1.0" lower="0" estimate="true"/>
		</distr>

		<prior id="clockRatePrior:$(n)" x="@clockRate:$(n)" distr="@clockRatesPriorDist" />

		<prior id="clockRatesMeanPrior" name="distribution" x="@clockRatesMean">
			<Uniform id="Uniform:clockSpreadPrior" lower="0.0" name="distr" upper="10000.0" />
		</prior>

		<prior id="clockRatesStdevPrior" name="distribution" x="@clockRatesStdev">
			<Uniform id="Uniform:clockSpreadPrior" lower="0.0" name="distr" upper="10000.0" />
		</prior>

		<operator id="clockRatesMeanScaler" spec="ScaleOperator" scaleFactor="0.75" parameter="@clockRatesMean" weight="6.0" />
		<operator id="clockRatesStdevScaler" spec="ScaleOperator" scaleFactor="0.75" parameter="@clockRatesStdev" weight="6.0" />

		<operator id="update:$(n)" spec="UpDownOperator" scaleFactor="0.95" weight="6.0">
			<up idref="clockRate:$(n)"/>
			<down idref="tree:$(n)"/>
		</operator>
]]>
			<connect srcID="clockRate.c:$(n)" targetID="state" inputName="stateNode" if="inlikelihood(clockRate.c:$(n)) and clockRate.c:$(n)/estimate=true"/>
			<connect srcID="clockRate.c:$(n)" targetID="state" inputName="stateNode" if="inlikelihood(clockRate.c:$(n)) and clockRate.c:$(n)/estimate=true"/>
			<connect srcID="clockPrior.c:$(n)" targetID="prior" inputName="distribution" if="inlikelihood(clockRate.c:$(n)) and clockRate.c:$(n)/estimate=true">
				Substitution rate of partition c:$(n)
			</connect>
			<connect srcID="StrictClockRateScaler.c:$(n)" targetID="mcmc" inputName="operator" if="inlikelihood(clockRate.c:$(n)) and clockRate.c:$(n)/estimate=true">
				Scale substitution rate of partition c:$(n)
			</connect>
			<connect srcID="strictClockUpDownOperator.c:$(n)" targetID="mcmc" inputName="operator" if="nooperator(FixMeanRatesOperator) and inlikelihood(clockRate.c:$(n)) and inlikelihood(Tree.t:$(n)) and Tree.t:$(n)/estimate=true and clockRate.c:$(n)/estimate=true">
				Scale substitution rate c:$(n) and inverse scale tree t:($n)
			</connect>
		</subtemplate>

		<branchRateModel clock.rate="@clockRate:loc07" estimateRoot="false" id="clock:loc07" rates="@branchRates:loc07" spec="starbeast2.DiscreteRates" tree="@tree:loc07">
			<LogNormal M="1.0" S="0.32" id="LogNormal:branchRates" meanInRealSpace="true" name="distr" />
		</branchRateModel>

		<!-- Relaxed clock log normal -->
		<subtemplate id="sbGeneTreeRelaxedClock" class="starbeast2.DiscreteRates" mainid="geneTreeRelaxedClock:$(n)">
<![CDATA[
		<plugin spec="starbeast2.DiscreteRates" id="geneTreeRelaxedClock:$(n)" tree="@geneTree:$(n)">
			<parameter name="clock.rate" id="clockRate:$(n)" value="1.0" estimate="true"/>
			<distr id="branchRatesDist:$(n)" name="distr" spec="beast.math.distributions.LogNormalDistributionModel" meanInRealSpace="true" M="1.0">
				<parameter name="S" id="branchRatesStdev:$(n)" value="0.32" lower="0" estimate="false"/>
			</distr>
			<distr id="clockRatesPriorDist" name="distr" spec="beast.math.distributions.LogNormalDistributionModel" meanInRealSpace="true">
				<parameter name="M" id="clockRatesMean" value="1.0" lower="0" estimate="false"/>
				<parameter name="S" id="clockRatesStdev" value="1.0" lower="0" estimate="true"/>
			</distr>
			<stateNode spec="parameter.IntegerParameter" id="branchRates:$(n)" value="1" dimension="10" estimate="true"/>
		</plugin>

		<prior id="clockRatePrior:$(n)" x="@clockRate:$(n)" distr="@clockRatesPriorDist" />

		<prior id="clockRatesMeanPrior" name="distribution" x="@clockRatesMean">
			<Uniform id="Uniform:clockSpreadPrior" lower="0.0" name="distr" upper="10000.0" />
		</prior>

		<prior id="clockRatesStdevPrior" name="distribution" x="@clockRatesStdev">
			<Uniform id="Uniform:clockSpreadPrior" lower="0.0" name="distr" upper="10000.0" />
		</prior>

		<operator id="clockRatesMeanScaler" spec="ScaleOperator" scaleFactor="0.75" parameter="@clockRatesMean" weight="6.0" />
		<operator id="clockRatesStdevScaler" spec="ScaleOperator" scaleFactor="0.75" parameter="@clockRatesStdev" weight="6.0" />
		<operator id="branchRateCycle:$(n)" k="2" spec="starbeast2.DiscreteRateCycle" treeRates="@branchRates:$(n)" weight="18.0" />
		<operator id="branchRateUniform:$(n)" k="1" spec="starbeast2.DiscreteRateUniform" treeRates="@branchRates:$(n)" weight="18.0" />

		<operator id="update:$(n)" spec="UpDownOperator" scaleFactor="0.95" weight="6.0">
			<up idref="clockRate:$(n)"/>
			<down idref="tree:$(n)"/>
		</operator>
]]>
			<connect srcID="clockMean.c:$(n)" targetID="state" inputName="stateNode"
					 if="inlikelihood(clockMean.c:$(n)) and clockMean.c:$(n)/estimate=true"/>
			<connect srcID="clockStdev.c:$(n)" targetID="state" inputName="stateNode"
					 if="inlikelihood(clockStdev.c:$(n)) and clockStdev.c:$(n)/estimate=true"/>
			<connect srcID="rateCategories.c:$(n)" targetID="state" inputName="stateNode"
					 if="inlikelihood(rateCategories.c:$(n))"/>

			<connect srcID="clockMeanScaler.c:$(n)" targetID="mcmc" inputName="operator"
					 if="inlikelihood(clockMean.c:$(n)) and clockMean.c:$(n)/estimate=true">Scale clock rate of partition
				c:$(n)
			</connect>
			<connect srcID="clockStdevScaler.c:$(n)" targetID="mcmc" inputName="operator"
					 if="inlikelihood(clockStdev.c:$(n))">Scale stdev of rate of partition c:$(n)
			</connect>
			<connect srcID="CategoriesRandomWalk.c:$(n)" targetID="mcmc" inputName="operator"
					 if="inlikelihood(rateCategories.c:$(n))">Randomly change categories of partition c:$(n)
			</connect>
			<connect srcID="CategoriesSwapOperator.c:$(n)" targetID="mcmc" inputName="operator" if="inlikelihood(rateCategories.c:$(n))">
				Swap categories of partition c:$(n)
			</connect>
			<connect srcID="CategoriesUniform.c:$(n)" targetID="mcmc" inputName="operator" if="inlikelihood(rateCategories.c:$(n))">
				Uniformly draw categories of partition c:$(n)
			</connect>
			<connect srcID="relaxedUpDownOperator.c:$(n)" targetID="mcmc" inputName="operator" if="nooperator(FixMeanRatesOperator) and inlikelihood(clockMean.c:$(n)) and clockMean.c:$(n)/estimate=true and Tree.t:$(n)/estimate=true">
				Up/down scaler for mean rate and tree of partition c:$(n)
			</connect>
			<connect srcID="Tree.t:$(n)" targetID="RelaxedClock.c:$(n)" inputName="tree" if="inlikelihood(RelaxedClock.c:$(n))"/>

			<connect srcID="clockMean.c:$(n)" targetID="tracelog" inputName="log" if="inlikelihood(clockMean.c:$(n)) and clockMean.c:$(n)/estimate=true"/>
			<connect srcID="clockStdev.c:$(n)" targetID="tracelog" inputName="log" if="inlikelihood(clockStdev.c:$(n))"/>

			<connect srcID="clockStdevPrior.c:$(n)" targetID="prior" inputName="distribution" if="inlikelihood(clockStdev.c:$(n))">
				Uncorrelated lognormal relaxed clock stdev of partition c:$(n)
			</connect>
			<connect srcID="MeanRatePrior.c:$(n)" targetID="prior" inputName="distribution" if="inlikelihood(clockMean.c:$(n)) and inlikelihood(Tree.t:$(n)) and clockMean.c:$(n)/estimate=true">
				Uncorrelated lognormal relaxed clock mean of partition c:$(n)
			</connect>

			<connect srcID="RelaxedClock.c:$(n)" targetID="TreeWithMetaDataLogger.t:$(n)" inputName="branchratemodel" if="inposterior(RelaxedClock.c:$(n))"/>
		</subtemplate>
	</mergewith>
</beast>
